{"version":3,"sources":["scripts/main.js"],"names":["head","document","querySelector","titles","children","sortTable","titleIndex","isSwitching","table","rows","shouldRowsSwitch","i","length","firstRow","getElementsByTagName","secondRow","firstRowContent","innerHTML","secondRowContent","isFirstRowNum","Number","isSecondRowNum","isCurrency","indexOf","firstCurrency","slice","split","join","firstRowLowered","toLowerCase","parentNode","insertBefore","addEventListener","e"],"mappings":";AAAA,aAiEC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/DD,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAAA,EAAKI,SAAS,GAAGA,UAEpC,SAASC,EAAUC,GAIVC,IAHDC,IAAAA,EAAQP,SAASC,cAAc,SACjCK,GAAc,EAEXA,GAAa,CAClBA,GAAc,EAERE,IAAAA,EAAOD,EAAMC,KACfC,GAAmB,EACnBC,OAAJ,EAEKA,IAAAA,EAAI,EAAGA,GAAKF,EAAKG,OAAS,EAAGD,IAAK,CAC/BE,IAAAA,EAAWJ,EAAKE,GAAGG,qBAAqB,MAAMR,GAC9CS,EAAYN,EAAKE,EAAI,GAAGG,qBAAqB,MAAMR,GAEnDU,EAAkBH,EAASI,UAC3BC,EAAmBH,EAAUE,UAE7BE,EAAgBC,OAAOJ,GACvBK,EAAiBD,OAAOF,GAE1BC,GAAAA,GACEA,GAAAA,EAAgBE,EAAgB,CAClCX,GAAmB,EACnB,YAKEY,IAAgB,IAFDN,EAAgBO,QAAQ,MAMrCC,IAHmBR,EAAgBS,MAAM,GAAGC,MAAM,KAAKC,KAAK,KACxCT,EAAiBO,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAE9B,CAClCjB,GAAmB,EACnB,YAMEkB,GAHoBZ,EAAgBa,cACfX,EAAiBW,cAEF,CACtCnB,GAAmB,EACnB,OAMJA,IACFD,EAAKE,GAAGmB,WAAWC,aAAatB,EAAKE,EAAI,GAAIF,EAAKE,IAClDJ,GAAc,IAKpB,IAASI,IAAAA,EAAAA,SAAAA,GACPR,EAAOQ,GAAGqB,iBAAiB,QAAS,SAAAC,GAClC5B,EAAUM,MAFLA,EAAI,EAAGA,EAAIR,EAAOS,OAAQD,IAA1BA,EAAAA","file":"main.0b3f69a5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst head = document.querySelector('thead');\nconst titles = [...head.children[0].children];\n\nfunction sortTable(titleIndex) {\n  const table = document.querySelector('tbody');\n  let isSwitching = true;\n\n  while (isSwitching) {\n    isSwitching = false;\n\n    const rows = table.rows;\n    let shouldRowsSwitch = false;\n    let i;\n\n    for (i = 0; i <= rows.length - 2; i++) {\n      const firstRow = rows[i].getElementsByTagName('td')[titleIndex];\n      const secondRow = rows[i + 1].getElementsByTagName('td')[titleIndex];\n\n      const firstRowContent = firstRow.innerHTML;\n      const secondRowContent = secondRow.innerHTML;\n\n      const isFirstRowNum = Number(firstRowContent);\n      const isSecondRowNum = Number(secondRowContent);\n\n      if (isFirstRowNum) {\n        if (isFirstRowNum > isSecondRowNum) {\n          shouldRowsSwitch = true;\n          break;\n        }\n      } else {\n        const isCurrency = firstRowContent.indexOf('$');\n\n        if (isCurrency !== -1) {\n          const firstCurrency = +firstRowContent.slice(1).split(',').join('');\n          const secondCurrency = +secondRowContent.slice(1).split(',').join('');\n\n          if (firstCurrency > secondCurrency) {\n            shouldRowsSwitch = true;\n            break;\n          }\n        } else {\n          const firstRowLowered = firstRowContent.toLowerCase();\n          const secondRowLowered = secondRowContent.toLowerCase();\n\n          if (firstRowLowered > secondRowLowered) {\n            shouldRowsSwitch = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (shouldRowsSwitch) {\n      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n      isSwitching = true;\n    }\n  }\n}\n\nfor (let i = 0; i < titles.length; i++) {\n  titles[i].addEventListener('click', e => {\n    sortTable(i);\n  });\n}\n"]}